exit
c
exit
tmp_arys = content.to_s.delete("\t\n\r").split(/[<,>,\s,\xc2\xa0]/)
tmp_arys = content.to_s.delete("\t\n\r").split(/[<,\s,\xc2\xa0]/)
content.to_s.split(/[<,\s,\xc2\xa0]/)
content.to_s.split("<")
tmp_arys = content.to_s.split()
tmp_ary
t_ary
t_ary = t.split("#")
n
c
t
c
exit
c
n
t
n
t
n
c
max
n
max
exit
n
t
n
max
t
c
t
n
max
n
max
n
c
t
n
max
c
max
n
max
n
cnt = i
n
i
n
t
exit
t
n
t
n
exit
tmp.delete("\t\n\r").split(">").size
tmp.delete("\t\n\r").split(">")
tmp.delete("\t\n\r")
tmp
t
n
exit
n
tmp
exit
n
tmp_ary
n
c
n
                t = t[1..t.size]
                break if code_chk1 == code_chk2
                code_chk2 = t[0] =~ regex
code_chk1 = t[i-1] =~ regex
code_chk1 == code_chk2
code_chk2 = t[0] =~ regex
code_chk1 = t[i-1] =~ regex
t
regex
c
content[4]
content[3]
content[2]
content[1]
content[0]
content
tmp_str
t
exit
c
tmp_str = c.text.delete("\t\n\r").split(" ")
c
t = t[0..-2]
t
t = t[0..-2]
t
t.chomp!
t
t[-2].to_i.to_s == t[-2]
t[-1].to_i.to_s == t[-1]
t[-1].to_i.to_s
t[-1].to_i
t[-2].to_i
t[-2]
t[-2].class.eql?(Integer)
t[-1].class.eql?(Integer)
t[-1].class.eql?(String)
t[-1].class.eql(String)
t[-1].class
t[-1]
t
c
job
c
job
c
job
n
c
n
c
n
data
exit
    end
      p "error" if sw!=sw2
      end
        }
          p sw2.push word if word == s
        k.any? { |word|
      sw.each do |s|
      end
        }        
          sw.push key if word == key
        cf.any? { |word|
      keys.each do |key|
      sw2 = []
      sw = []
      keys = data.keys
      data = JSON.load(open(url))
      debugger        
      url = uri.normalize.to_s
      uri = Addressable::URI.parse(url)
      url = "https://api.lootbox.eu/pc/kr/#{tag}/hero/#{job}/"
jobs.each do |job|
    tag.gsub!(/#/, '-')
tag = "아아아퍼때리지마#3725"
url
c
n
c
status
c
status
c
status
n
data
c
status
c
status
c
status
c
data
c
data.class.eql?(Array)
data.class
data.class == "Array"
data.class
data[""]
data
n
data
c
status
data
c
data
data["statusCode"]
data
n
c
data
n
c
status
c
data = JSON.load(open(url))
url
n
c
status
n
status
c
status
c
status = get_profile(tag, over_tag.id) if status == 200
status
n
status
n
status
exit
status
n
exit
url
data
n
c
data["statusCode"]
data.class
data.statusCode
data
data[statusCode]
data.statusCode
data.status_code
data
n
cn
c
url
c
url
data
    url = uri.normalize.to_s
    uri = Addressable::URI.parse(url)
    url = "https://api.lootbox.eu/pc/kr/#{tag}/achievements"
    tag.gsub!(/#/, '-')
tag = "아아아퍼때리지마#3725"    
c
@tag_data
@tag_data = OverTag.create(tag: tag)
@tag_data = OverTag.find_by_tag(tag)
tag
@tag_data
n
@tag_data
c
auth.info.battletag
auth.info
auth
c
exit
data["SoundBarriersProvided"]
data
c
data = JSON.load(open(url))
require 'open-uri'
