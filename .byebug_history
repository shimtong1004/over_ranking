c
over_tag
over_tag.over_user_types
over_tags
over_tag = over_tags[0]
over_tag.over_user_types
n
over_tags
c
@heros
n
over_tags
n
over_tags
c
@heros
c
hero_rank["hero"]["110_Time_Played_local_rank"]
hero_rank["hero"]["110_Time_Played"]
hero_rank["hero"]
n
hero_rank["hero"]
c
support_cnt
c
offense_cnt
hero_datas.count
offense_cnt
offense_hash[KEY["승률"]].to_f
offense_hash[KEY["승률"]]
continue
asdlfkjl;kasd
offense_hash[KEY["승률"]
c
n
over_user_type.heros.where(play_type: session[:play_type]).where("name <> ?", "ALL HEROES").order("Time_Played desc").count
heros.count
heros = over_user_type.heros.where(play_type: session[:play_type]).where("name <> ?", "ALL HEROES").order("Time_Played desc").offset(4)
over_user_type.heros.where(play_type: session[:play_type]).where("name <> ?", "ALL HEROES").order("Time_Played desc").count
ver_user_type.heros.where(play_type: session[:play_type]).where("name <> ?", "ALL HEROES").order("Time_Played desc").count
c
@heros[2].name
@heros[1].name
@heros[0].name
@heros.size
@heros = over_user_type.heros.where(play_type: session[:play_type]).where("name <> ?", "ALL HEROES").order("Time_Played desc").limit(3)
c
n
rank = con.select_all(sql)
con.select_all(sql)
con = ActiveRecord::Base.connection
sql
exit
c
n
sql
c
Hero.where(play_type: session[:play_type], user_type: over_user_type.user_type).where("Time_Played > ?", @hero.Time_Played).count + 1
Hero.where(play_type: session[:play_type]).where("Time_Played > ?", @hero.Time_Played).count + 1
Hero.where(play_type: session[:play_type]).count
Hero.where(play_type: session[:play_type], user_type: over_user_type.user_type).count
@hero_local_rank = Hero.where(play_type: session[:play_type], user_type: over_user_type.user_type).where("Time_Played > ?", @hero.Time_Played).count + 1
@hero_rank = Hero.where(play_type: session[:play_type]).where("Time_Played > ?", @hero.Time_Played).count + 1
c
@hero_name
c
params[:hero_name]
c
@name
c
hero_rank["hero"]
c
@heros.count
@heros = over_user_type.heros
over_user_type.heros
@heros.count
@heros.size.count
@heros.size
@heros
n
session[:play_type]
over_user_type
c
hero_rank["main"]["Time_Played_rank"]
hero_rank["main"]
hero_rank["main"]["{#KEY["플레이 시간"]#}_rank"]
hero_rank["main"]
hero_rank["main"][KEY["플레이 시간"]]
hero_rank["main"]
c
hero_rank["main"]
hero_rank
ffasfdsadfsdaf
hero
exit
c
sql
sql = "(SELECT COUNT(#{r_key}) FROM  heros where play_type = '#{session[:play_type]}' and name='ALL HEROES' and #{r_key} > '#{hero[r_key]}' ) AS #{hero.id}_#{r_key}_rank"
c
n
c
exit
sql += "(SELECT COUNT(#{r_key}) FROM  heros where play_type = '#{session[:play_type]}' and name='ALL HEROES' and #{r_key} > '#{hero[r_key]}' ) AS #{hero.name}_#{r_key}_rank, "
c
sql += "(SELECT COUNT(#{r_key}) FROM  heros where play_type = '#{session[:play_type]}' and name='ALL HEROES' and #{r_key} > '#{hero[r_key]}' ) AS #{hero.name}_#{r_key}_rank, "
hero.name
exit
c
hero
c
rank.to_hash[0]
n
c
zc
c
d
c
n
c
rank = con.select_all(sql)
sql
rank = con.select_all(sql)
n
sql
n
sql
slq
n
c
n
sql
c
n
@offense_data[MAIN_RANK_KEY[0]]
sql
c
n
c
sql
c
rank.to_hash[0]
rank.to_hash
n
c
sql
c
n
c
rank.to_hash
result.to_hash
rank = con.select_all(sql)
con.select_all sql
rank
rank = con.execute(sql)
n
con = ActiveRecord::Base.connection
sql
c
n
tables = data.css(".column.xs-12.md-6.xl-4.margin-xs.margin-no-sides table")
c
hero
c
play_type_id
c
play_type_id
c
play_type_id
play_types
c
play_types
play_type_id
c
user_type.over_tag
user_type
play_type
hero = user_type.heros.where(play_type: play_type, name: "ALL HEROES").first
c
hero = user_type.heros.where(play_type: play_type, name: "ALL HEROES").first
c
hero = user_type.heros.where(play_type: play_type, name: "ALL HEROES").first
c
hero = user_type.heros.where(play_type: play_type, name: "ALL HEROES").first
c
n
c
exit
c
exit
@main_hero_data_rank
c
hero_rank = (Hero.where(name: "ALL HEROES", play_type: session[:play_type]).where("#{r_key} > ?", @main_hero_data[r_key]).count) + 1
c
r_key
hero_rank = (Hero.where(name: "ALL HEROES", play_type: session[:play_type]).where("r_key > ?", @main_hero_data[r_key]).count) + 1
c
hero_rank = (Hero.where(name: "ALL HEROES").where("Time_Played > ?", hero.Time_Played).count) + 1
hero_rank = (user_type.heros.where(name: "ALL HEROES").where("Time_Played > ?", hero.Time_Played).count) + 1
hero_rank = (user_type.heros.where(name: "ALL HEROES", play_type: session[:play_type]).where("Time_Played > ?", hero.Time_Played).count) + 1
hero_rank = (user_type.heros.where(name: "ALL HEROES", play_type: session[:play_type]).where("Time_Played < ?", hero.Time_Played).count) + 1
hero_rank = (user_type.heros.where(name: "ALL HEROES", play_type: session[:play_type]).where("Time_Played > ?", hero.Time_Played).count) + 1
hero_rank = (user_type.heros.where(name: "ALL HEROES", play_type: session[:play_type]).where("Time_Played > ?", hero.Time_Played).count
hero_rank
hero[KEY["플레이 시간"]].to_f
hero[KEY["플레이 시간"]]
hero_rank = (user_type.heros.where(name: "ALL HEROES", play_type: session[:play_type]).where("#{KEY["플레이 시간"]} > ?", hero[KEY["플레이 시간"]]).count) + 1
exit
c
col
hero[col] + cnt.to_f + 1.to_f
c
hero[col] + cnt.to_f + 1.to_f
c
hero[col] + cnt.to_f + 1.to_f
c
hero[col] + cnt.to_f + 1.to_f
c
hero
n
exit
hero
n
user_type_id_ary
over_user_type.blank?
n
over_user_type = OverUserType.where(over_tag_id: over_tag_id, user_type: user_type)
over_user_type.id
over_user_type = OverUserType.where(over_tag_id: over_tag_id, user_type: user_type)
c
user_type
play_type
user_type.heros.where(play_type: play_type, name: "ALL HEROES").first
exit
OverUserType.where(over_tag_id: over_tag_id)
OverUserType.where(over_tag_id: over_tag_id, user_type: user_type).first
user_type = "PC - EU" if html.include?("pc/eu")
            end
              user_type = "PC - EU"
            elsif html.include?("pc/eu")
              user_type = "PC - US"
            elsif html.include?("pc/us")
              user_type = "PC - KR"
if html.include?("pc/kr")
user_type
OverUserType.where(over_tag_id: over_tag_id)
over_tag_id
user_type = OverUserType.where(over_tag_id: over_tag_id, user_type: user_type).first
exit
col
her[col] = hero[col] + cnt.to_f + 1.to_f
c
her[col] = hero[col] + cnt.to_f + 1.to_f
c
her[col] = hero[col] + cnt.to_f + 1.to_f
c
her[col] = hero[col] + cnt.to_f + 1.to_f if col != "id"
